<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
     http://www.springframework.org/schema/beans 
     http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
     http://www.springframework.org/schema/tx 
     http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
     http://www.springframework.org/schema/aop 
     http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
     http://www.springframework.org/schema/context 
     http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	<context:component-scan base-package="com.hzw.du.test.biz" />
	
	<!-- Memcached缓存的配置文件 -->
	<import resource="memcached.xml"/>
	
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<value>classpath*:/application_test.properties</value>
			</list>
		</property>
	</bean>

	<!-- mybitas 数据库链接配置    -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" >
		<property name="driverClassName" value="${jdbc.driverClassName}" />		
		<property name="url" value="${jdbc.url}" />	
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />	
	</bean> 
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 指定数据源 -->
		<property name="dataSource" ref="dataSource"/>
		<!-- mybaits 配置文件 -->
		<property name="configLocation" value="classpath:mybatis-config_test.xml"/>
		<!-- 自动配置类的别名 -->
		<property name="typeAliasesPackage" value="com.hzw.du.model.mapper" /> 
	</bean>
	<!-- 创建dao bean（只需提供接口不需提供实现类 ） -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.hzw.du.model.mapper" />
	 	<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
	</bean>
	<!-- 基础dao -->
	<bean id="baseDao" class="com.hzw.du.model.dao.impl.BaseDaoImpl"></bean> 
	<!-- 业务系统 独有dao impl -->
	<bean id="bizDao" class="com.hzw.du.model.dao.impl.BizDaoImpl"></bean>  
	<!-- 后台管理系统独有dao impl -->
	<bean id="manageDao" class="com.hzw.du.model.dao.impl.ManageDaoImpl" ></bean>  
	<!-- 门户网站 dao impl -->
	<bean id="portalDao" class="com.hzw.du.model.dao.impl.PortalDaoImpl"></bean>  
	
	<!-- 缓存独有接口 -->
	<bean id="memcachedBiz" class="com.hzw.du.biz.impl.MemcachedBizImpl" >
		<property name="memcachedClient" ref="memcachedClient"></property>
	</bean>  
	
	<!-- 基础业务接口 -->
	<bean id="baseBiz" class="com.hzw.du.biz.impl.BaseBizImpl">
		<property name="baseDao" ref="baseDao"></property>
		<property name="bizDao" ref="bizDao"></property>
		<property name="manageDao" ref="manageDao"></property>
		<property name="portalDao" ref="portalDao"></property>
		<property name="memcachedBiz" ref="memcachedBiz"></property>
	</bean> 
	<!-- 业务系统独有接口 --> 
	<bean id="bussinessBiz" class="com.hzw.du.biz.impl.BussinessBizImpl" parent="baseBiz"></bean>  
	<!-- 后台管理系统独有接口 -->
	<bean id="manageBiz" class=" com.hzw.du.biz.impl.ManageBizImpl" parent="baseBiz"></bean>  
	<!-- 门户网站独有接口 -->
	<bean id="portalBiz" class="com.hzw.du.biz.impl.PortalBizImpl" parent="baseBiz"></bean>
	
	
	<!-- 定义JDBC事务处理管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
    	<property name="dataSource" ref="dataSource"/>  
   	</bean>
   	<!-- 事务增强器 -->
   	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- 
				name属性：参与事务管理的方法名，允许使用*进行通配； （必须定义）
				propagation:定义事务传播行为（默认值：REQUIRED， 可选值：SUPPORTS、MANDATOROY、REQUIRES_NEW、NOT_SUPPORTED、NEVER、NESTED）；
				isolation:事务的隔离级别（默认值：DEFAULT； 可选值：DEFAULT、READ_UNCOMMITTED、READ_COMMITTED、REPEATABLE_READ、SERIALIZABLE）；
				timeout:事务超时的时间(默认值：-1单位秒；表示超时的时间由底层的事务系统决定);
				read-only:事务是否只读（默认值：false）；
				rollback-for:触发事务回滚的异常类型（多个异常通过逗号分隔，允许使用*进行通配）；
				no-rollback-for:不触发事务回滚的异常类型（多个异常通过逗号分隔，允许使用*进行通配）；
			-->
           <tx:method name="find*" read-only="true"/>
           <tx:method name="query*" read-only="true"/>
           <tx:method name="get*" read-only="true" />
           <tx:method name="add*"/>
           <tx:method name="save*"/>
           <tx:method name="update*"/>
           <tx:method name="modify*"/>
           <tx:method name="del*"/>
           <tx:method name="delete*"/>
           <tx:method name="insert*"/>
		</tx:attributes>
  	</tx:advice> 
	<!-- 说明：
   		1.配置哪些类需要进行事务处理；
   		2.允许定义多套事务切面；  -->
   	<aop:config>  
   		<!--  使用切点表达式定义需要进行事务管理的目标类和方法: expression: public 表示拦截公共函数  -->
	    <aop:pointcut id="daoMethod" expression="execution(public* com.hzw.du.model.dao..*.*(..))" />  
	    <!-- 引用事务增强器 -->
	    <aop:advisor advice-ref="txAdvice" pointcut-ref="daoMethod"/>  
   	</aop:config>
	
</beans>
