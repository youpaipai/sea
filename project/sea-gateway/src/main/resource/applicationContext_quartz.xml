<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
						http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
						http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
	"> 
  
    <!-- 启动触发器的配置开始 如果将lazy-init='false'那么容器启动就会执行调度程序 -->  
    <bean id="startQuertz" lazy-init="false" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">  
            <list>  
                <ref bean="initJobTrigger" />  
            </list>  
        </property>  
    </bean>  
    <!-- 启动触发器的配置结束 -->  
  
    <!-- 调度的配置开始 -->    
    <bean id="initJobTrigger"  
        class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">  
        <property name="jobDetail">  
            <ref bean="initJobDetail" />  
        </property>  
        <property name="cronExpression">  
            <value>0 23 17 * * ?</value>  
        </property>  
    </bean>  
    <!-- 调度的配置结束 -->  
  
    <!-- job的配置开始 -->  
    <bean id="initJobDetail"  
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">  
        <property name="targetObject">  
            <ref bean="initJob" />  
        </property>  
        <property name="targetMethod">  
            <value>work</value>  
        </property>  
        <!-- 是否允许任务并发执行。当值为false时，表示必须等到前一个线程处理完毕后才再启一个新的线程 -->
        <property name="concurrent" value="false" />
    </bean>  
    <!-- job的配置结束 -->  
  
    <!-- 工作的bean -->  
    <bean id="initJob" lazy-init="false" class="com.hzw.framework.quartz.InitData" init-method="work" >
    	<property name="baseBiz" ref="baseBiz"></property>
		<property name="memcachedBiz" ref="memcachedBiz"></property>
    </bean> 
    
    <!-- Cron表达式的格式：秒 分 时 日 月 周 年(可选)。
		字段名 允许的值 允许的特殊字符 
		秒 0-59 , - * / 
		分 0-59 , - * / 
		小时 0-23 , - * / 
		日 1-31 , - * ? / L W C 
		月 1-12 or JAN-DEC , - * / 
		周几 1-7 or SUN-SAT , - * ? / L C # 
		年 (可选字段) empty, 1970-2099 , - * /
		
		“?”字符：表示不确定的值
		“,”字符：指定数个值
		“-”字符：指定一个值的范围
		“/”字符：指定一个值的增加幅度。n/m表示从n开始，每次增加m
		“L”字符：用在日表示一个月中的最后一天，用在周表示该月最后一个星期X
		“W”字符：指定离给定日期最近的工作日(周一到周五)
		“#”字符：表示该月第几个周X。6#3表示该月第3个周五
		
		"0 0 12 * * ?" 每天中午12点触发
		"0 15 10 ? * *" 每天上午10:15触发
		"0 15 10 * * ?" 每天上午10:15触发
		"0 15 10 * * ? *" 每天上午10:15触发
		"0 15 10 * * ? 2005" 2005年的每天上午10:15触发
		"0 * 14 * * ?" 在每天下午2点到下午2:59期间的每1分钟触发
		"0 0/5 14 * * ?" 在每天下午2点到下午2:55期间的每5分钟触发
		"0 0/5 14,18 * * ?" 在每天下午2点到2:55期间和下午6点到6:55期间的每5分钟触发
		"0 0-5 14 * * ?" 在每天下午2点到下午2:05期间的每1分钟触发
		"0 10,44 14 ? 3 WED" 每年三月的星期三的下午2:10和2:44触发
		"0 15 10 ? * MON-FRI" 周一至周五的上午10:15触发
		"0 15 10 15 * ?" 每月15日上午10:15触发
		"0 15 10 L * ?" 每月最后一日的上午10:15触发
		"0 15 10 ? * 6L" 每月的最后一个星期五上午10:15触发
		"0 15 10 ? * 6L 2002-2005" 2002年至2005年的每月的最后一个星期五上午10:15触发
		"0 15 10 ? * 6#3" 每月的第三个星期五上午10:15触发
		*/5 * * * * ? 每隔5秒执行一次
		0 */1 * * * ? 每隔1分钟执行一次 -->
  
</beans>  